<?php
/**
* @file
* Implements hook_schema()
*/

function lunch_management_schema() {
  $schema = array();
  $schema['ftype'] = array(
  'description' => 'type of food',
  'fields'=>array(
     'typeid' => array(
      'description' => 'primary key',
      'type'=> 'serial',
      'unsigned'=> TRUE,
      'not null' => TRUE,),
      'tname'=> array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,),
    'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: {users}.uid for user.',
      ),
      'tdescript' => array(
        'description' => 'description for type',
        'type'=> 'varchar',
        'length'=> 255,),),
       'primary key' => array('typeid'),
       'foreign keys' => array(
        'sup_type' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),),);
  $schema['tbl_lunch'] = array(
    'description' => 'It is my table.',
    'fields' => array(
      'foodid' => array(
        'description' => 'My primary key for table.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
     'typeid' => array(
      'description' => 'primary key',
      'type'=> 'int',
      'unsigned'=> TRUE,
      'not null' => TRUE,),
      'fitem' => array(
        'description' => 'A field to storing item name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
 
      'fdescript' => array(
        'description' => 'A field for storing a description for item',
        'type' => 'text',
      ),
      'fimage' => array(
        'description' => 'Image of items.',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: {users}.uid for user.',
      ),
      'price' => array(
         'description' => 'price of item',
         'type' => 'float',
         'unsigned' => TRUE,
         'size' => 'normal',
         'not null' => TRUE, 
       ),
    ),
    'primary key' => array('foodid'),
     'foreign key' => array('typeid'=>array(
      'table' => 'ftype',
      'columns'=> array('typeid'=>'typeid')),
      'tuid'=>array(
       'table'=>'users',
       'columns'=>array('uid'=>'uid')),),
  //add uid to this table for select food by supplier
  );
 $schema['orders'] = array(
  'description'=>'storing order data',
  'fields'=>array(
    'orderId'=>array(
     'type'=>'serial',
     'unsigned'=>TRUE,
     'not null'=>TRUE,),
    'orderdate'=>array(
    'type'=>'datetime',
    'mysql_type'=>'DATE',),
    'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: {users}.uid for user.',
      ),
     ),
     'primary key'=>array('orderID'),
     'foreign key'=>array(
      'uid'=>array(
       'table'=>'users',
       'columns'=>array('uid'=>'uid')),),
  );
 $schema['orderDetails'] = array(
  'description'=>'details for order list',
  'fields'=>array(
  /*'detailID'=>array(
   'type'=>'serial',
   'unsigned'=>TRUE,
   'not null'=>TRUE,),*/
  'orderId'=>array(
     'type'=>'int',
     'unsigned'=>TRUE,),
  'foodid' => array(
        'description' => 'primary key of food table.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
    ),
     ),
   //'primary key'=>array('detailID'),
   'foreign key'=>array(
    'o_id'=>array(
    'table'=>'orders',
    'columns'=>array('orderID'=>'orderID')),
    'f_id'=>array(
     'table'=>'tbl_lunch',
     'columns'=>array('foodid'=>'foodid')),),);
  return $schema;
}

/**
* Implements hook_install()
*/
/**
function testdb_install() {
  db_insert('mytb')->fields(array(
    'fe_id' => 0,
    'mynumber' => 0,
    'mytext' => '',
  ))->execute();
}
*/

/**
 * Implement hook_install().
 *
 */
function lunch_management_install() {
  // Call the array with your default roles.
  $roles = lunch_management_default_roles();
  // Loop through the array.
  foreach ($roles as $value) {
    // Check that a role is not already returned.
    if (!user_role_load_by_name($value)) {
      $role = new stdClass(); // create your Class
    
      // Match values to the role Class.
      $role->name = $value['name'];
      $role->weight = $value['weight'];

      // Save the Role using Drupal's API.
      user_role_save($role);
    }
  }
}

/**
 * Define roles and their wait.
 */
function lunch_management_default_roles() {
  $roles = array();
  $roles['Manager'] = array(
    'name' => 'Manager',
    'weight' => '3',
  );
  $roles['Supplier'] = array(
    'name' => 'Supplier',
    'weight' => '4',
  );
  $roles['Employee'] = array(
    'name' => 'Employee',
    'weight' => '5',
  );
  return $roles;
}
?>
