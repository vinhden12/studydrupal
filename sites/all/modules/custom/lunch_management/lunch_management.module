<?php
/**
* @file
* Implements my project
*/

/**
* Implements hook_permission
*/


function lunch_management_permission(){
$permission = array(
'administer project'=>array(
 'title'=>t('Administer project'),
 ),
'basic access'=>array(
  'title'=>'Basic access',
  'description'=>t('Basic access'),),
 'add type' =>array(
  'title'=>t('add type'),
  'description'=>t('add food type'),),
 'manage food'=>array(
 'title'=>t('Manage food'),
 'description'=>t('Supplier add new food items, view ordered food'),
  ),

 'order food' => array(
  'title'=>t('Order food for lunch'),
  'description'=>t('Users order food here'),),

 'view report'=>array(
  'title'=>t('View order list'),
  'description'=>t('Administrator views order list'),),);
return $permission;
}


/**
* Implement hook_menu()
*/

function lunch_management_menu(){
$items = array();


/**
* Implements Restaurant administration page
*/
$items['app'] = array(
'title' => 'Supplier section',
'description' => t('Supplier can add new food items in this area. But other groups cannot do the same.'),
'page callback' => 'freport',
'file' => 'lunch_management.inc',
//'access callback' =>TRUE ,
'access arguments'=>array('basic access'),
'type'=>MENU_NORMAL_ITEM,
);

$items['app/addtype']= array(
'title' => 'Add type',
'description' => t('Add new type'),
'page callback' => 'drupal_get_form',
'page arguments' => array('kfood_form'),
'access arguments' =>array('add type'),
'type' => MENU_LOCAL_TASK,
'weight' =>0,
);

$items['app/addfood']= array(
'title' => 'Add new Item',
'description' => t('Add new food item'),
'page callback' => 'drupal_get_form',
'page arguments' => array('app_form'),
'access arguments' =>array('manage food'),
'type' => MENU_LOCAL_TASK,
'weight' =>1,
);


$items['app/viewfood']= array(
'title' => 'List',
'description' => t('List'),
'page callback' => 'freport',
'file' => 'lunch_management.inc',
//'page callback'=>'_load_data',
//'file'=>'task.inc',
'access arguments' => array('manage food'),
'type' => MENU_DEFAULT_LOCAL_TASK,
'weight' => 2,
);

$items['app/vieworder'] = array(
'title' => 'View order list',
'description' => t('View order list'),
//'page callback' => 'notice',
//'file'=>'lunch_management.inc',
'page callback'=>'lunch_management_html_page',
//'file'=>'task.inc',
'access arguments' => array('manage food'),
'type'=> MENU_LOCAL_TASK,
 'weight'=>3,);

$items['app/%/delete']= array(
'title' => 'Delete item',
'page callback' => 'drupal_get_form',
'page arguments'=>array('delete_item_record_comfirm_form',1),
'file'=>'task.inc',
'access arguments' => array('manage food'),
'type' => MENU_CALLBACK,
);

$items['app/%/edit']= array(
'title' => 'Edit item',
'page callback' => 'form_values_edit',
'page arguments'=>array(1),
'file'=>'task.inc',
'access arguments' => array('manage food'),
'type' => MENU_CALLBACK,
);

/*
$items['app2'] = array(
'title' => 'Order management',
'description' => t('This is use for testing'),
/**
'page callback' => 'drupal_get_form',
'page arguments' => array('kfood_form'),  
'page callback' => 'notice',
'file' => 'lunch_management.inc',
'access arguments' => array('manage food'),
'type'=>MENU_NORMAL_ITEM,
);

$items['app2/vieworder'] = array(
'title' => 'View order list',
'description' => t('View order list'),
'page callback' => 'notice',
'file'=>'lunch_management.inc',
'access arguments' => array('manage food'),
'type'=> MENU_DEFAULT_LOCAL_TASK,
 'weight'=>3,);
*/

$items['app3'] = array(
'title' => 'Order food',
'description' => t('Order food for your lunch'),
'page callback' => 'drupal_get_form',
'page arguments' => array('myorder_form'),
'access arguments' => array('order food'),
'file'=>'lunch_management.inc',
'type'=>MENU_NORMAL_ITEM,);

$items['app3/order'] = array(
'title' => 'order food',
'description' => t('please fill in the blank for ordering'),
//'page callback' => 'drupal_get_form',
//'page arguments' => array('myorder_form'),
'page callback'=>'_fetch_data',
'file'=>'task.inc',
'access arguments' => array('order food'),
//'file'=>'lunch_management.inc',
'type'=> MENU_DEFAULT_LOCAL_TASK,
'weight'=>4,);
return $items;
}


/**
* generating form
*/

function app_form($form,&$form_state, $mydef = NULL){

// $user->uid for filter food type, it will be enabled when supplier have add type permission

//global $user; 

$form = array();

// $option = array('type1'=>t('This is use for testing'),'type2'=>t('Vegetarian food'),'type3'=> t('Meated food'),);


//Select type of food

$sql = "SELECT typeid, tname FROM {ftype}";
$result = db_query($sql);
$option = array('--Select a type--');
foreach($result as $row){
$option[$row->typeid] = t($row->tname);
}


//this below for select type, its code when supplier have permission

/*
 $option = array();
 $sql = db_select('ftype','f');
 $sql->fields("f", array('typeid','uid', 'tname'));
  // Filter the active ones only
 $sql->condition("f.uid", $user->uid);
  // Order by name
 $sql->orderBy("f.tname");
  // Execute query

 $result = $sql->execute();

  while($row = $result->fetchObject()){
    // Key-value pair for dropdown options
    $option[$row->typeid] = $row->tname;
  }

*/


//while($erg=db_fetch_object($sql)){
//$option[$erg->tname]=$erg->tname;

//=============================================================================================================
/**
$option = array('grp1'=>array('item1'=>t('item 1'),'item2'=>t('item 2'),),
'grp2'=>array('item3'=>t('item 3'),'item4'=>t('item 4'),));
*/


/**
$form['food_item'] = array(
'#title' => t('Food items'),
'#type' => 'select',
'#description' => t('Select your food items. Hold down Ctrl and click on items you want.'),
'#multiple' => TRUE,
'#options' => $option,);
*/

//=============================================================================================================


$form['tof'] = array(
'#title' => t('Select a type'),
'#type' => 'select',
'#description' => t('Please select a type of food'),
'#options' => $option,
'#required' => TRUE,
'#default_value' => isset($mydef['tname']) ? $mydef['tname'] : '',
);


$form['foodid'] = array(
    '#type' => 'value',
    '#value' => $mydef['foodid'],
  );

$form['fooditem'] = array(
'#title' => t('Name'),
'#description' => t('Enter an Item'),
'#type' => 'textfield',
'#size' => 60,
'#maxlength' => 80,
'#required' => TRUE,
'#default_value' => isset($mydef['fitem']) ? $mydef['fitem'] : '',
);

$form['descript'] = array(
'#title' => t('Description'),
'#desctiption' => t('Enter the description for Item'),
'#type' => 'textarea',
'#cols' => 50,
'#rows' => 5,
'#resizable' => FALSE,
'#default_value' => isset($mydef['fdescript']) ? $mydef['fdescript'] : '',
);

$form['fprice'] = array(
'#title' => t('Price'),
'#description' => t('Enter price'),
'#type' => 'textfield',
'#size' => 10,
'#maxlength' => 7,
'#required' => TRUE,
'#default_value' => isset($mydef['price']) ? $mydef['price'] : '',
);

$form['ifile'] = array(
    '#type' => 'managed_file',
    '#title' => t('Image'),
    //'#default_value' => variable_get('ifile', ''),
    '#upload_location' => 'public://images/',
    '#description' => t('Upload a file, allowed extensions: jpg, jpeg, png, gif'), 
    '#default_value' => isset($mydef['fimage']) ? $mydef['fimage'] : '',
); 

$form['submit'] = array(
'#type' => 'submit',
'#value' => t('Add'),
);

$form['actions']['cancel'] = array(
	'#type' => 'submit',
	//'#attributes' => array('onClick' => 'location.replace("'. referer_uri() .'"); return false;'),
	'#value' => t('Cancel'),
	'#submit' => array('callback_for_cancel_button'),
    '#limit_validation_errors' => array(),
  );
  
return $form;
}

function callback_for_cancel_button($form, &$form_state) {
//check whether we have destination to redirect after clicking the cancel button otherwise redirect to front page
//$url = $_GET['destination'] ? $_GET['destination'] : '';
$url = '';
drupal_goto($url);
}

/**
* Implements hook_form_alter()
*/
/**
function myapp_form_alter(&$form,&$form_state,$form_id){
if($form_id =='app_form'){
$form['#validate'][] = 'app_form_validate';
}
}

/**
* form validation
*/

function app_form_validate($form,&$form_state){
if(!is_numeric($form_state['values']['fprice'])){
form_set_error('fprice',t('Please enter an valid price'));
}
}

function app_form_submit($form,&$form_state){


//save uid for selecting food by supplier
global $user;

//get type

//$name = $form['tof']['#options'][$form_state['values']['tof']];


//if(!isset($form_state['tof']['#option'][$form_state['values']['tof']])){
//$result = 0;
//}else{ 
$name = $form['tof']['#options'][$form_state['values']['tof']];
$query = db_select('ftype', 'f');
$query->condition('f.tname', $name, '=');

$query->fields('f',array('typeid'));
$result = $query->execute()->fetchField();
//}

//$result = db_query("SELECT f.typeid FROM {ftype} f WHERE f.tname = ':name'",
//array(':name'=>$form_state['values']['tof']))->fetchField();

//$sql = "SELECT typeid FROM {ftype} WHERE tname=:name ";
//$tt = db_query($sql);


/**
$foodid = db_insert('tbl_lunch')
->fields(array(
'typeid' => $result,
'uid'=>$user->uid,
'fitem' => $form_state['values']['fooditem'],
'fdescript' => $form_state['values']['descript'],
'price' => $form_state['values']['fprice'],
'fimage' => $form_state['values']['ifile'], 
))
->execute();

*/
/////////////////////////////////////////////////////////////

$file = $form_state['values']['ifile'];
//file_load($file);
//$file->status = FILE_STATUS_PERMANENT;
//file_save($file);


//edit item

if(isset($form_state['values']['foodid'])) {
    
    db_update('tbl_lunch')
      ->fields(array(
        'typeid' => $result,
        'uid'=>$user->uid,
        'fitem' => $form_state['values']['fooditem'],
        'fdescript' => $form_state['values']['descript'],
        'price' => $form_state['values']['fprice'],
        'fimage' => $form_state['values']['ifile'],  
      ))
      ->condition('foodid', $form_state['values']['foodid'] )
      ->execute();
    drupal_set_message(t('Record has been updated.'));    
  }
  else {
  // Here u can insert Your custom form values into your custom table.
  $foodid =  db_insert('tbl_lunch')
      ->fields(array(
        'typeid' => $result,
        'uid'=>$user->uid,
        'fitem' => $form_state['values']['fooditem'],
        'fdescript' => $form_state['values']['descript'],
        'price' => $form_state['values']['fprice'],
        'fimage' => $form_state['values']['ifile'],      
      ))->execute();
      db_update('file_managed')
      ->fields(array('status'=>1,))
      ->condition('fid',$form_state['values']['ifile'])
      ->execute();
     drupal_set_message(t('Your form has been submited'));
  } 
//////////////////////////////////////////////////////////////////

/*
if(isset($form_state['values']['foodid'])){
$var = $form_state['values']['foodid'];
_update_data($var);
}else{
$foodid = db_insert('tbl_lunch')
      ->fields(array(
        'typeid' => $result,
        'uid'=>$user->uid,
        'fitem' => $form_state['values']['fooditem'],
        'fdescript' => $form_state['values']['descript'],
        'price' => $form_state['values']['fprice'],
        'fimage' => $form_state['values']['ifile'],      
      ))->execute();
}*/

  $form_state['redirect'] = 'app/';

//drupal_set_message(t($name));
}

/**
* Implements form for inputing type
*/


function kfood_form($form,&$form_state){
$form['foodtype'] = array(
'#title' => t('Type name'),
'#description' => t('Enter a type'),
'#type' => 'textfield',
'#size' => 60,
'#maxlength' => 80,
'#required' => TRUE,
);

$form['tdescript'] = array(
'#title' => t('Description'),
'#desctiption' => t('Enter the description for Item'),
'#type' => 'textarea',
'#cols' => 50,
'#rows' => 5,
'#resizable' => FALSE,);
$form['submit'] = array(
'#type' => 'submit',
'#value' => t('Add'),
);
return $form;
}




/**
* Insert data into type table
*/

function kfood_form_submit($form,&$form_state){
global $user;
if(user_is_logged_in()){
$typeid = db_insert('ftype')
->fields(array(
'uid'=>$user->uid,
'tname' => $form_state['values']['foodtype'],
'tdescript' => $form_state['values']['tdescript'],
))
->execute();
}
drupal_set_message(t('You added success'));
//drupal_set_message(t($user->uid));
}

//view version

function lunch_management_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'lunch_management') .'/includes'
  );
}


//fetch item's image from database
function _load_img($fid){
if(!isset($fid)||($fid == 0)) {
 $f_img = t('No Picture');
}else{
$file = file_load($fid);
$image = image_load($file->uri);
$content = array(
  'file' => array(
    '#theme' => 'image_style',
    '#style_name' => 'large',
    '#path' => $image->source,
    '#width' => $image->info['width'],
    '#height' => $image->info['height'],
  ),
);
$f_img = drupal_render($content);
}
//echo drupal_render($content);
return $f_img;
}


function lunch_management_html_page(){
$results = db_select('tbl_lunch', 't')
         ->fields('t', array('foodid', 'fitem', 'fdescript','price','fimage'))
         ->execute();
/*
 $query = db_select('tbl_lunch', 't');
 $query->join('file_managed', 'f', 'f.uid=t.uid');
 $results = $query
    ->fields('t', array('foodid', 'fitem', 'fdescript','price','fimage'))
    ->fields('f', array('fid'))
    ->execute();*/

 //drupal_add_css(drupal_get_path('modules','lunch_management'). '/css.css');
 
 $output ='';
 //$output = '<div class = "\shopp\">';
 //$output .= '<table>';
 //$output .= '<tr>';
 /*$output .= '<th>Name</th><th>Descp.</th><th>price</th><th>picture</th>';
 $output .= '</tr>';*/

 $output = '<p>List</p>';

 //$output = '<strong>My data</p>'; 

 //$output .='<ul>';
 foreach($results as $rs){
  $ffid = $rs->fimage;
  //$output .= '<tr>';

 // $output .= '<li>'. $rs->fitem . '</li>';
 // $output .= '<li>' .$rs->fdescript .'</li>';
 // $output .= '<li>' . $rs->price .'</li>';
 // $output .= '<li>' . _load_img($ffid) .'</li>'; 

  $output .= '<h2>' . $rs->fitem .'</h2>' .'<br>' . $rs->fdescript .'<br>';
  $output .=  _load_img($ffid) .'<br>';

  //$output .= '</tr>';
//$output.= '<div class =\"label\">';
//$output.= $rs->fitem;
//$output.=$rs->fdescript;
//$output.='</div>';
 /* print 'Name :'.$rs->fitem .'<br>';
  print 'Description :'.$rs->fdescript .'<br>';
  print 'Price :'.$rs->price .'<br>';
  print 'Picture :'._load_img($fid) .'<br>';*/
 }
// $output .= '</ul>';

 //$output.= '</div>';
 return $output;
}

function lunch_management_renderable_page(){
    $results = db_select('tbl_lunch', 't')
         ->fields('t', array('foodid', 'fitem', 'fdescript','price','fimage'))
         ->execute();  
   $items = array();
   foreach($results as $rs){
    $var1 = '<h2>' . $rs->fitem .'</h2>' .'<br>' . $rs->fdescript .'<br>';
    $var2 = _load_img($ffid) .'<br>';
    //$items = array(
    //$rs->fitem,$rs->fdescript,$rs->price,_load_img($ffid));
    $items = array($var1, $var2);
   }
    $output = array(
    'first_para'=>array(
    '#type'=>'markup',
    '#markup'=>'<p>List</p>'),
    'second_para'=>array(
    '#items'=>$items,
    '#theme'=>'item_list',),);
  return $output;
}

/**
* Implements hook_init
*/

function lunch_management_init(){
//drupal_add_css(drupal_get_path('module', 'mymodule') . '/style.css');
}
?>
 
